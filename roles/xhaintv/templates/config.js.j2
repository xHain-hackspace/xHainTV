/* Config Sample
 *
 * For more information on how you can configure this file
 * see https://docs.magicmirror.builders/configuration/introduction.html
 * and https://docs.magicmirror.builders/modules/configuration.html
 *
 * You can use environment variables using a `config.js.template` file instead of `config.js`
 * which will be converted to `config.js` while starting. For more information
 * see https://docs.magicmirror.builders/configuration/introduction.html#enviromnent-variables
 */
let config = {
    address: "localhost", // Address to listen on, can be:
    // - "localhost", "127.0.0.1", "::1" to listen on loopback interface
    // - another specific IPv4/6 to listen on a specific interface
    // - "0.0.0.0", "::" to listen on any interface
    // Default, when address config is left out or empty, is "localhost"
    port: 8080,
    basePath: "/", // The URL path where MagicMirrorÂ² is hosted. If you are using a Reverse proxy
    // you must set the sub path here. basePath must end with a /
    ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"], // Set [] to allow all IP addresses
    // or add a specific IPv4 of 192.168.1.5 :
    // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
    // or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
    // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

    useHttps: false, // Support HTTPS or not, default "false" will use HTTP
    httpsPrivateKey: "", // HTTPS private key path, only require when useHttps is true
    httpsCertificate: "", // HTTPS Certificate path, only require when useHttps is true

    language: "de",
    locale: "de-DE",
    logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
    timeFormat: 24,
    units: "metric",

    modules: [{
            module: "alert",
        },
        {
            module: "updatenotification",
            position: "top_bar"
        },
        {
            module: "clock",
            position: "top_left"
        },
        {
            module: "MMM-OnSpotify",
            position: "top_left",
            config: {
                displayWhenEmpty: "user",
            },
        },
        {
            module: "calendar",
            header: "X-Hain Kalender",
            position: "middle_center",
            config: {
                fade: false,
                maximumEntries: 15,
                // fadePoint: 0.1,
                calendars: [{
                    fetchInterval: 7 * 24 * 60 * 60 * 1000,
                    symbol: "calendar",
                    url: "https://files.x-hain.de/remote.php/dav/public-calendars/Yi63cicwgDnjaBHR/?export&accept=ical",
                }]
            }
        },
        {
            module: "weather",
            position: "top_right",
            config: {
                weatherProvider: "openmeteo",
                type: "current",
                lat: 52.5127567,
                lon: 13.4471839
            }
        },
        {
            module: "weather",
            position: "top_right",
            header: "Wetter",
            config: {
                weatherProvider: "openmeteo",
                type: "forecast",
                lat: 52.5127567,
                lon: 13.4471839
            }
        },
        {
            module: "helloworld",
            position: "bottom_bar", // This can be any of the regions.
            config: {
                // See 'Configuration options' for more information.
                text: "Hack Me!\nPing @SuperQ on Matrix",
            },

        },
        {
            module: "MMM-PublicTransportBerlin",
            position: "bottom_bar", // This can be any of the regions.
            config: {
                stationId: "900120014",
                marqueeLongDirections: false,
                travelTimeToStation: 2,
                maxReachableDepartures: 5,
            },
        },
    ]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") {
    module.exports = config;
}
